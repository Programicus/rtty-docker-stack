services:
  db:
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-defaultuser}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-defaultpassword}
      POSTGRES_DB: ${POSTGRES_DB:-defaultdatabase}
    volumes:
      - ./db/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 60s
      retries: 15
      start_period: 30s 
    restart: always

  worker:
    build:
      context: worker
      additional_contexts:
        - hostetc=/etc
      args:
        POSTGRES_USER: ${POSTGRES_USER:-defaultuser}
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-defaultpassword}
        POSTGRES_DB: ${POSTGRES_DB:-defaultdatabase}
    depends_on:
      db:
        condition: service_healthy
        restart: true
    networks:
      - backend
    devices:
      - /dev/snd:/dev/snd
    restart: always

#  mqtt:
#    build:
#      context: mqtt
#      args:
#        MQTT_BROKER: ${MQTT_BROKER:-example.com}
#        MQTT_TOPIC: ${MQTT_TOPIC:-rtty}
#        MQTT_USER: ${MQTT_USER:-defaultuser}
#        MQTT_PASSWORD: ${MQTT_PASSWORD:-defaultpassword}
#        POSTGRES_USER: ${POSTGRES_USER:-defaultuser}
#        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-defaultpassword}
#        POSTGRES_DB: ${POSTGRES_DB:-defaultdatabase}
#
#    depends_on:
#      db:
#        condition: service_healthy
#        restart: true
#    networks:
#      - backend
#    restart: always

  node-red:
    build: 
      context: node-red
    ports:
      - "1880:1880"
    volumes:
      - ./data:/data
    networks:
      - backend
      - frontend
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-defaultuser}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-defaultpassword}
      POSTGRES_DB: ${POSTGRES_DB:-defaultdatabase}
    depends_on:
      db:
        condition: service_healthy
        restart: true
    restart: always

  web:
    build:
      context: web
      args:
        POSTGRES_USER: ${POSTGRES_USER:-defaultuser}
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-defaultpassword}
        POSTGRES_DB: ${POSTGRES_DB:-defaultdatabase}
    ports:
      - "80:80"
    depends_on:
      node-red:
        condition: service_started
      db:
        condition: service_healthy
        restart: true
    networks:
      - frontend
      - backend
    restart: always

networks:
  frontend:
  backend:
